name: Run CI Check

on:
   pull_request:
      branches: [dev]

jobs:
  build:
    runs-on: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'gradle'
      - name: Grant execute permissions for gradlew
        run: chmod +x gradlew

      - name: Run unit tests
        run: ./gradlew clean testDebug

  lint:
    runs-on: [ubuntu-latest]

    steps:
        - uses: actions/checkout@v4
        - name: Setup JDK 17
          uses: actions/setup-java@v3
          with:
            distribution: 'temurin'
            java-version: 17
            cache: 'gradle'
        - name: Grant execute permissions for gradlew
          run: chmod +x gradlew

        - name: Run lint check
          run: ./gradlew lint

  sonar:
    name: SonarCloud check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available
      - name: Grant execute permissions for gradlew
        run: chmod +x gradlew
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info